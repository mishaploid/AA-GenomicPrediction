################################################################################
## AA-GP: summarize GBLUP results
## Sarah Turner-Hissong
## Updated 18 March 2019

library(tidyverse)
library(ggpubr)
library(kableExtra)

date <- format(Sys.time(), '%Y%m%d')

# read in amino acid trait ids
aa_names <- data.frame(trait = colnames(read.table("data/processed/pheno_file", 
                                                   header = TRUE))) %>%
  filter(!trait %in% c("trait", "FID", "IID")) %>%
  mutate(id = as.character(1:length(trait)))

# heritability
gblup_h2 <- tibble(file = list.files(path = "models/gblup_h2", 
                                     pattern = ".reml$", 
                                     full.names = TRUE)) %>%
  separate(file, sep = "_", into = c("source", "method", "id"), remove = FALSE) %>%
  mutate(data = lapply(file, read.table, header = TRUE, skip = 13),
         id = gsub(".reml", "", id)) %>%
  unnest(data) %>%
  left_join(., aa_names, by = "id") %>%
  filter(Component %in% "Her_ALL") %>%
  select(trait, id, Heritability, Her_SD) 

# log likelihood 
gblup_llik <- tibble(file = list.files(path = "models/gblup_h2",
                                     pattern = ".reml$",
                                     full.names = TRUE)) %>%
  separate(file, sep = "/", into = c("source", "method", "id"), remove = FALSE) %>%
  mutate(data = lapply(file, read.table, header = TRUE)) %>%
  unnest(data) %>%
  filter(Num_Kinships %in% "Alt_Likelihood") %>%
  mutate(id = str_replace(id, "gblup_", ""),
         id = str_replace(id, ".reml", ""),
         gblup_llik = as.numeric(X1)) %>%
  left_join(., aa_names, by = "id") %>%
  select(id, trait, gblup_llik) 


# predictive accuracy

gblup_pa <- tibble(file = list.files(path = "models/gblup", 
                                     pattern = ".profile$", 
                                     full.names = TRUE)) %>%
  separate(file, sep = "_", into = c("cv", "cvnum", "fold", "id"), remove = FALSE) %>%
  mutate(data = lapply(file, read.table, header = TRUE),
         id = gsub(".profile", "", id)) %>%
  unnest(data) %>%
  group_by(cvnum, fold, id) %>%
  mutate(cor = cor(Phenotype, Profile1, use = "complete.obs")) %>%
  summarise_at(., "cor", .funs = mean) %>%
  ungroup() %>%
  left_join(., aa_names, by = "id") %>%
  select(trait, cvnum, fold, cor) 

save(gblup_h2, gblup_llik, gblup_pa, file = "models/gblup.RData")
